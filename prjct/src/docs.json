{
    "paths": {
        "/docs/dist/{filename}": {},
        "/docs/{path}": {},
        "/api/search": {
            "get": {
                "summary": "\u041f\u043e\u0438\u0441\u043a \u0437\u0430\u043f\u0438\u0441\u0435\u0439",
                "description": "\u041f\u043e\u0438\u0441\u043a \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u043f\u043e \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0441\u043b\u043e\u0432\u0430\u043c \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 20 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432, \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043f\u043e \u0434\u0430\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u043d\u0438\u044e",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/in:query name:search schema:SearchParametersSchema"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponseSchema"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "API"
                ]
            }
        },
        "/api/delete/{id}": {
            "delete": {
                "summary": "\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u043f\u0438\u0441\u0438",
                "description": "\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u043f\u043e \u043f\u043e\u043b\u044e  `id`",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/in:path name:delete schema:DeleteParametersSchema"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteSuccessSchema"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteErrorSchema"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "API"
                ]
            }
        },
        "/search": {
            "get": {
                "summary": "\u041f\u043e\u0438\u0441\u043a",
                "description": "\u041f\u043e\u0438\u0441\u043a",
                "responses": {
                    "200": {
                        "description": "ok",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchPageSchema"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "frontend"
                ]
            }
        },
        "/swagger": {}
    },
    "info": {
        "title": "search eng",
        "version": "0"
    },
    "tags": [
        {
            "name": "frontend",
            "description": "frontend webpage"
        },
        {
            "name": "API",
            "description": "api endpoint"
        }
    ],
    "openapi": "3.0.3",
    "components": {
        "schemas": {
            "SearchPageSchema": {
                "type": "object",
                "properties": {
                    "webpage": {
                        "type": "string",
                        "description": "\u041f\u0440\u043e\u0441\u0442\u0430\u044f \u0432\u0435\u0431-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c\u044e \u043f\u043e\u0438\u0441\u043a\u0430 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c API",
                        "example": "<!DOCTYPE html>\n <html lang=\"ru\">\n \n <head>\n     <meta charset=\"UTF-8\">\n     <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n     <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n     <style>\n         * {\n             box-sizing: border-box;\n         }\n \n         body {\n             margin: 0;\n             font-family: Arial, Helvetica, sans-serif;\n         }\n \n         .topnav {\n             overflow: hidden;\n             background-color: #e9e9e9;\n         }\n \n \n \n         .topnav a:hover {\n             background-color: #ddd;\n             color: black;\n         }\n \n         .topnav a.active {\n             background-color: #2196F3;\n             color: white;\n         }\n \n         .topnav .search-container {\n             float: right;\n         }\n \n         .topnav input[type=text] {\n             padding: 6px;\n             margin-top: 8px;\n             font-size: 17px;\n             border: none;\n         }\n \n         .topnav .search-container button {\n             float: right;\n             padding: 6px 10px;\n             margin-top: 8px;\n             margin-right: 16px;\n             background: #ddd;\n             font-size: 17px;\n             border: none;\n             cursor: pointer;\n         }\n \n         .topnav .search-container button:hover {\n             background: #ccc;\n         }\n \n         @media screen and (max-width: 600px) {\n             .topnav .search-container {\n                 float: none;\n             }\n \n             .topnav a,\n             .topnav input[type=text],\n             .topnav .search-container button {\n                 float: none;\n                 display: block;\n                 text-align: left;\n                 width: 100%;\n                 margin: 0;\n                 padding: 14px;\n             }\n \n             .topnav input[type=text] {\n                 border: 1px solid #ccc;\n             }\n         }\n     </style>\n </head>\n \n <body>\n \n     <div class=\"topnav\">\n         <div class=\"search-container\">\n             <form role=\"search\" id=\"form\">\n                 <input type=\"text\" placeholder=\"Search..\" id=\"query\" name=\"q\">\n                 <button type=\"submit\"><i class=\"fa fa-search\"></i></button>\n             </form>\n         </div>\n     </div>\n \n     <div style=\"margin: auto; width: 75%;\" id='search_result'>\n         <div id='result'></div>\n         <script>\n             const f = document.getElementById('form');\n             const q = document.getElementById('query');\n \n             let last_search_query = ''\n \n             function submitted(event) {\n                 event.preventDefault();\n                 const url = '/api/search?q=' + q.value;\n                 last_search_query = url;\n                 httpGetAsync(url, print_result)\n             }\n \n             function print_result(result) {\n                 const r = document.getElementById('result');\n                 const result_1 = JSON.parse(result)\n \n                 let html_code = ''\n                 result_1.forEach(element => {\n                     if (element != null) {\n                         html_code = html_code + '<div style=\"display: flex;\">' + '<div style=\"background-color: white; padding: 0px 10px; margin: 10px auto; width:100%\">' + '<p> Text:' + element.text + '</p>'\n                             + '<p> ID:' + element.id + '</p>' + '<p> Created date:' + element.created_date + '</p>'\n                             + '<p> Rubrics:' + element.rubrics + '</p>' + '</div>' + '<button onclick=\"delete_entry()\" style=\"min-width: 50px; background-color: gray; margin: 10px;\" class=\"fa fa-regular fa-trash\" id=\"delete_btn_' + element.id + '\"></button>' + '</div>'\n                     }\n                 });\n                 r.innerHTML = html_code\n             }\n \n             function httpGetAsync(theUrl, callback) {\n                 var xmlHttp = new XMLHttpRequest();\n                 xmlHttp.onreadystatechange = function () {\n                     if (xmlHttp.readyState == 4 && xmlHttp.status == 200)\n                         callback(xmlHttp.responseText);\n                 }\n                 xmlHttp.open(\"GET\", theUrl, true); // true for asynchronous \n                 xmlHttp.send(null);\n             }\n \n             function delete_entry() {\n                 const url = '/api/delete/' + event.target.id.substr(11);\n                 httpDeleteAsync(url, after_delete_entry)\n             }\n             async function after_delete_entry(result) {\n                 console.log(result)\n                 httpGetAsync(last_search_query, print_result)\n             }\n \n             function httpDeleteAsync(theUrl, callback) {\n                 var xmlHttp = new XMLHttpRequest();\n                 xmlHttp.onreadystatechange = function () {\n                     if (xmlHttp.readyState == 4 && xmlHttp.status == 200)\n                         callback(xmlHttp.responseText);\n                 }\n                 xmlHttp.open(\"DELETE\", theUrl, true); // true for asynchronous \n                 xmlHttp.send(null);\n             }\n \n             f.addEventListener('submit', submitted);\n         </script>\n     </div>\n \n </body>\n \n </html>"
                    }
                },
                "required": [
                    "webpage"
                ]
            },
            "SearchParametersSchema": {
                "type": "object",
                "properties": {
                    "q": {
                        "type": "string",
                        "description": "\u0421\u0442\u0440\u043e\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u0439\u0442\u0438",
                        "example": "\u041f\u0440\u0438\u0432\u0435\u0442"
                    }
                },
                "required": [
                    "q"
                ]
            },
            "SearchResponseSchema": {
                "type": "object",
                "properties": {
                    "response": {
                        "type": "string",
                        "description": "\u0421\u043f\u0438\u0441\u043e\u043a \u0438\u0437 \u043c\u0438\u043d\u0438\u043c\u0443\u043c 0 \u0438 \u043c\u0430\u043a\u0441\u043c\u0443\u043c 20 \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0445 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432, \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043f\u043e \u0434\u0430\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0432 \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u043d\u0438\u044f",
                        "example": "[{\"created_date\":\"Wed, 09 Jan 2019 20:55:44 GMT\",\"id\":16796,\"rubrics\":[\"VK-1603736028819866\",\"VK-88413115730\",\"VK-69103370657\"],\"text\":\"\u041c\u0443\u0436\u0438\u043a\u0438 \u0432\u0441\u0435\u043c \u043f\u0440\u0438\u0432\u0435\u0442, \u043f\u043e\u0434\u0441\u043a\u0430\u0436\u0438\u0442\u0435 \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430 \u0433\u0434\u0435 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043a\u043e\u0434\u044b \u043e\u0448\u0438\u0431\u043e\u043a \u043d\u0430 \u043c\u0435\u0440\u0441\u0435\u0434\u0435\u0441 \u0432\u0438\u0430\u043d\u043e \u0433\u043e\u0434 2008, \u043c\u043e\u0442\u043e\u0440 2.2 150 \u043a\u043e\u0431\u044b\u043b\"},{\"created_date\":\"Tue, 15 Jan 2019 19:47:26 GMT\",\"id\":17874,\"rubrics\":[\"VK-1603736028819866\",\"VK-10847316026\",\"VK-27470760776\"],\"text\":\"\u041f\u0440\u0438\u0432\u0435\u0442 \u0432\u0430\u043c \u0438\u0437 \u0434\u0435\u0442\u0441\u0442\u0432\u0430, \u043e\u0442 \u0421\u0430\u0448\u0435\u043d\u044c\u043a\u0438 \u0438 \u0412\u043e\u0432\u043a\u0438\u2764 \u043e\u043d\u0438 \u0441\u0435\u0439\u0447\u0430\u0441 \u043d\u0430\u0432\u0430\u043b\u044f\u044e\u0442\u0441\u044f \u0432\u0434\u043e\u0432\u043e\u043b\u044c, \u043f\u0440\u043e\u043c\u043e\u043a\u043d\u0443\u0442 \u0434\u043e \u043d\u0438\u0442\u043a\u0438 \u0438 \u0433\u0440\u0435\u0442\u044c\u0441\u044f \u0431\u0435\u0433\u043e\u043c \u0434\u043e\u043c\u043e\u0439, \u043a \u0431\u0430\u0442\u0430\u0440\u0435\u0435. \n\u0410 \u043a\u0430\u043a\u043e\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u0443 \u0432\u0430\u0441? \u2744\"}]"
                    }
                },
                "required": [
                    "response"
                ]
            },
            "DeleteParametersSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "\u0418\u043d\u0434\u0435\u043a\u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0432 \u043f\u043e\u0438\u0441\u043a\u043e\u0432\u043e\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u0435",
                        "example": 16796
                    }
                },
                "required": [
                    "id"
                ]
            },
            "DeleteSuccessSchema": {
                "type": "object",
                "properties": {
                    "response": {
                        "type": "string",
                        "description": "\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0441 \u0437\u0430\u0434\u043d\u043d\u044b\u043c `id` \u043d\u0430\u0439\u0434\u0435\u043d, \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e",
                        "example": "{'message':'success'}"
                    }
                },
                "required": [
                    "response"
                ]
            },
            "DeleteErrorSchema": {
                "type": "object",
                "properties": {
                    "response": {
                        "type": "string",
                        "description": "\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0441 \u0437\u0430\u0434\u043d\u043d\u044b\u043c `id` \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d, \u043e\u0448\u0438\u0431\u043a\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f",
                        "example": "{'message':'error'}"
                    }
                },
                "required": [
                    "response"
                ]
            }
        }
    }
}